 
 1          OPTIONS NONOTES NOSTIMER NOSOURCE NOSYNTAXCHECK;
 NOTE: ODS statements in the SAS Studio environment may disable some output features.
 62         
 63         /********************************************************************************************/
 64         /* Program Name:     pulkit.jain_HW11.sas    */
 65         /* Program Location: C:\Users\Pulkit Jain\Documents\sasuniversityedition\myfolders\assign11 */
 66         /* Date Created:     10/24/2017          */
 67         /* Author:  Pulkit Jain                      */
 68         /* Purpose:   Assignment 11, practice creating variables conditionally    */
 69         /********************************************************************************************/
 70         
 71         /* 1 Create two libname statements;   */
 72         /* Assign library to locaion of hw data with access only; */
 73         /* Assign another library with read and write access;     */
 74         
 75         libname hw_data '/folders/myfolders/hw_data' access=readonly;
 NOTE: Libref HW_DATA was successfully assigned as follows: 
       Engine:        V9 
       Physical Name: /folders/myfolders/hw_data
 76         libname pulkit11 '/folders/myfolders/assign11';
 NOTE: Libref PULKIT11 was successfully assigned as follows: 
       Engine:        V9 
       Physical Name: /folders/myfolders/assign11
 77         
 78         /* Specify a fileref to designate output of pdf */
 79         
 80         filename HW11 '/folders/myfolders/assign11/pulkit.jain_HW11_output.pdf';
 81         
 82         /* 2 Use Jobs2017 data as input      */
 83         /* Create temporary dataset "narrow" */
 84         /* Only contain the variables Sector, state, month, year, and jobs */
 85         
 86         
 87         data work.narrow;
 88            set hw_data.jobs2017;
 NOTE: Data file HW_DATA.JOBS2017.DATA is in a format that is native to another host, or the file encoding does not match the 
       session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
       performance.
 89               length month $ 12; * Make sure month doesn't truncates;
 90               if sector = 'PROFESSIONAL AND BUSINESS SERVICES' then
 91                  sector = 'PROFESSIONAL/BUSINESS SERVICES'; * 2b Convert the entry in sector;
 92           sector = propcase(sector); * 2c Change variable sector to propercase;
 93             month = 'August'; * 2d Hard code block of code for month info;
 94             year = '2016';
 95             if aug__2016 ne '' then jobs = aug__2016; * Delete observation if no jobs in month;
 96             else delete;
 97           output;
 98             month = 'September';
 99             year = '2016';
 100            jobs = sept__2016;
 101          output;
 102            month = 'October';
 103            year = '2016';
 104              jobs = oct__2016;
 105          output;
 106            month = 'November';
 107            year = '2016';
 108              jobs = nov__2016;
 109          output;
 110            month = 'December';
 111            year = '2016';
 112              jobs = dec__2016;
 113          output;
 114            month = 'January';
 115            year = '2017';
 116              jobs = jan__2017;
 117          output;
 118            month = 'February';
 119            year = '2017';
 120              jobs = feb__2017;
 121          output;
 122            month = 'March';
 123            year = '2017';
 124              jobs = mar__2017;
 125          output;
 126            month = 'April';
 127            year = '2017';
 128              jobs = apr__2017;
 129          output;
 130            month = 'May';
 131            year = '2017';
 132              jobs = may_2017;
 133          output;
 134            month = 'June';
 135            year = '2017';
 136              jobs = june_2017;
 137          output;
 138              month = 'July';
 139            year = '2017';
 140              jobs = july_2017;
 141          output;
 142              month = 'August';
 143            year = '2017';
 144              jobs = aug__2017;
 145          output;
 146          keep sector state month year jobs;* 2a Specify which variables to retain;
 147          format jobs 6.1;* Decimal format for jobs;
 148        run;
 
 NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
       95:23   
 NOTE: There were 518 observations read from the data set HW_DATA.JOBS2017.
 NOTE: The data set WORK.NARROW has 5434 observations and 5 variables.
 NOTE: DATA statement used (Total process time):
       real time           0.01 seconds
       cpu time            0.01 seconds
       
 
 149        
 150        /* 3 Create 6 new datasets from monthly_jobs1617 data set */
 151        
 152        data work.mrkt_small (KEEP = sector state avg_jobs)
 153         work.mrkt_med (KEEP = sector state avg_jobs)
 154         work.mrkt_large (KEEP = sector state avg_jobs)
 155         work.government (KEEP = state avg_jobs market_size)
 156         work.goods (KEEP = sector state avg_jobs market_size)
 157         work.services (KEEP = sector state avg_jobs market_size);
 158         * specify names & variables of all 6 data outputs;
 159        set hw_data.monthly_jobs1617;
 160        drop rep_date
 161         ann_chg;* 3a Drop repeat_date & annual change;
 162        avg_jobs = sum(of aug__2016 -- aug__2017)/13; * 3b calculate avg_jobs of all months;
 163        label avg_jobs = 'Average Jobs';
 164        format avg_jobs 8.1;
 165        if avg_jobs EQ '' then delete;* 3c remove observations when avg_jobs is missing;
 166            if avg_jobs >900 then do
 167           market_size ='Large';* 3d classify jobs in market segments;
 168           output work.mrkt_large;* create first data output;
 169        end;
 170        else if avg_jobs >100 then do
 171           market_size ='Med.';
 172           output work.mrkt_med;* create second data output;
 173        end;
 174        else do
 175           market_size ='Small';
 176           output work.mrkt_small;* create third data output;
 177        end;
 178        keep sector state avg_jobs;
 179        
 180        select (sector);* 3e use select statement to filter;
 181        when ('GOVERNMENT') do;* filter when sector = govt.;
 182        keep state
 183         avg_jobs
 184         market_size;
 185        /* drop sector;  */
 186        output work.government;* create fourth data output;
 187        end;
 188        
 189        when('CONSTRUCTION', 'MANUFACTURING') do;* when sector = const or manuf;
 190        keep sector
 191         state
 192         avg_jobs
 193         market_size;
 194        output work.goods;* create fifth data output;
 195        end;
 196        
 197        when ('FINANCIAL ACTIVITIES', 'PROFESSIONAL AND BUSINESS SERVICES',
 198          'EDUCATION AND HEALTH SERVICES', 'LEISURE AND HOSPITALITY') do;
 199        keep sector
 200         state
 201         avg_jobs
 202         market_size;
 203        output work.services;* create sixth data output;
 204        end;
 205        otherwise;* send rest of output to Null;
 206        end;
 207        label market_size = 'Market Size';* change label of variable market_size;
 208        run;
 
 NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
       165:17   
 NOTE: Missing values were generated as a result of performing an operation on missing values.
       Each place is given by: (Number of times) at (Line):(Column).
       6 at 162:13   6 at 162:43   
 NOTE: There were 424 observations read from the data set HW_DATA.MONTHLY_JOBS1617.
 NOTE: The data set WORK.MRKT_SMALL has 131 observations and 3 variables.
 NOTE: The data set WORK.MRKT_MED has 258 observations and 3 variables.
 NOTE: The data set WORK.MRKT_LARGE has 29 observations and 3 variables.
 NOTE: The data set WORK.GOVERNMENT has 53 observations and 3 variables.
 NOTE: The data set WORK.GOODS has 103 observations and 4 variables.
 NOTE: The data set WORK.SERVICES has 209 observations and 4 variables.
 NOTE: DATA statement used (Total process time):
       real time           0.02 seconds
       cpu time            0.01 seconds
       
 
 209        
 210        /* 4 PDF output file so that bookmarks are created but not shown by default*/
 211        
 212        ods pdf file = HW11 bookmarkgen= yes bookmarklist = hide;
 NOTE: Writing ODS PDF output to DISK destination "HW11", printer "PDF".
 213        
 214        /*  5 Print first 50 and last 50 observations of data in step 2*/
 215        
 216        title '5.1 - First 50 Observations from Monthly Jobs Data Set';
 217        PROC Print data = work.narrow(obs = 50) label noobs;
 218        RUN;
 
 NOTE: There were 50 observations read from the data set WORK.NARROW.
 NOTE: PROCEDURE PRINT used (Total process time):
       real time           0.12 seconds
       cpu time            0.12 seconds
       
 
 219        
 220        title '5.2 - Last 50 Observations from Monthly Jobs Data Set';
 221        PROC Print data = work.narrow(firstobs=5385 obs=5434 ) label noobs;
 222        RUN;
 
 NOTE: There were 50 observations read from the data set WORK.NARROW.
 NOTE: PROCEDURE PRINT used (Total process time):
       real time           0.16 seconds
       cpu time            0.16 seconds
       
 
 223        
 224        title '5.3 - Fifty Observations from Monthly Jobs Data Set Beginning with #2800';
 225        PROC Print data = work.narrow(firstobs = 2800 obs = 2849) label noobs;
 226        RUN;
 
 NOTE: There were 50 observations read from the data set WORK.NARROW.
 NOTE: PROCEDURE PRINT used (Total process time):
       real time           0.11 seconds
       cpu time            0.11 seconds
       
 
 227        
 228        /* 6 Print the 6 datasets created in step 3 above */
 229        
 230        title '6a - First 30 Observations of Small Markets';
 231        PROC Print data = work.mrkt_small(obs = 30) label;
 232        RUN;
 
 NOTE: There were 30 observations read from the data set WORK.MRKT_SMALL.
 NOTE: PROCEDURE PRINT used (Total process time):
       real time           0.06 seconds
       cpu time            0.06 seconds
       
 
 233        
 234        title '6b - First 30 Observations of Medium Markets';
 235        PROC Print data = work.mrkt_med(obs = 30) label;
 236        RUN;
 
 NOTE: There were 30 observations read from the data set WORK.MRKT_MED.
 NOTE: PROCEDURE PRINT used (Total process time):
       real time           0.09 seconds
       cpu time            0.09 seconds
       
 
 237        
 238        title '6c - Large Markets';
 239        PROC Print data = work.mrkt_large label;
 240        RUN;
 
 NOTE: There were 29 observations read from the data set WORK.MRKT_LARGE.
 NOTE: PROCEDURE PRINT used (Total process time):
       real time           0.08 seconds
       cpu time            0.09 seconds
       
 
 241        
 242        title '6d - Selected Observations from Goods sector';
 243        PROC Print data = work.goods(firstobs = 75 obs = 104) noobs label;
 244        RUN;
 
 NOTE: There were 29 observations read from the data set WORK.GOODS.
 NOTE: PROCEDURE PRINT used (Total process time):
       real time           0.06 seconds
       cpu time            0.06 seconds
       
 
 245        
 246        title '6e - Small Markets in the Services sector';
 247        PROC Print data = work.services(obs = 30) label;
 248          where upcase(market_size) = 'SMALL';
 249        RUN;
 
 NOTE: There were 30 observations read from the data set WORK.SERVICES.
       WHERE UPCASE(market_size)='SMALL';
 NOTE: PROCEDURE PRINT used (Total process time):
       real time           0.07 seconds
       cpu time            0.07 seconds
       
 
 250        
 251        title '6f - Government sector';
 252        PROC Print data = work.government label;
 253        RUN;
 
 NOTE: There were 53 observations read from the data set WORK.GOVERNMENT.
 NOTE: PROCEDURE PRINT used (Total process time):
       real time           0.09 seconds
       cpu time            0.09 seconds
       
 
 254        
 255        /* 7 Print specific contents is SAShelp vtable */
 256        
 257        title '7 - Data Sets in the WORK Library';
 258        PROC Print data = sashelp.vtable label noobs;
 259         where upcase(libname) = 'WORK';
 260         var libname memname crdate nobs nvar;
 261        RUN;
 
 NOTE: Data file HW_DATA.JOBS2017.DATA is in a format that is native to another host, or the file encoding does not match the 
       session encoding. Cross Environment Data Access will be used, which might require additional CPU resources and might reduce 
       performance.
 NOTE: There were 7 observations read from the data set SASHELP.VTABLE.
       WHERE UPCASE(libname)='WORK';
 NOTE: PROCEDURE PRINT used (Total process time):
       real time           0.12 seconds
       cpu time            0.11 seconds
       
 
 262        
 263        
 264        
 265        ods pdf close;
 NOTE: ODS PDF printed 14 pages to /folders/myfolders/assign11/pulkit.jain_HW11.pdf.
 266        ods listing;
 267        
 268        OPTIONS NONOTES NOSTIMER NOSOURCE NOSYNTAXCHECK;
 281        